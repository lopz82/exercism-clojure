(last "DAS")
(map (last "DAS"))
(apply (last "DAS"))
(apply last "DAS")
(reduce last "DAS")
(reduce last '() "DAS")
(reduce last [] "DAS")
(conj (rest "DAS" last "DAS"))
(conj (rest "DAS") (last "DAS"))
(conj (rest "DAS") (first "DAS"))
(conj (rest "DAS") (last "DAS"))
(reduce conj '() [1 2 3 4])
(reduce conj '() "DAS")
(conj '() "DAS")
(conj '() (list "DAS"))
(conj '() '("D" "A" "S"))
(conj "DAS")
(conj "X" "DAS")
(conj '() "D")
(conj '() "DAS")
(reduce conj '() "DAS")
(conj '() "D")
(conj '("D") "A")
(reduce str '("D" "A" "S"))
(reduce str (reduce conj '() "DAS"))
(reduce str (reduce conj '() "S"))
(str "\S")
(str \S)
(quit)
(into () "DAS")
(into () (seq "DAS"))
(into () "DAS")
(str (into () "DAS")
(str (into () "DAS"))
(apply str (into () "DAS"))
(map str (into () "DAS"))
(quiT)
(quit)
